package dock.ws.client;

import java.io.IOException;
import java.net.URI;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import javax.websocket.*;
import org.glassfish.tyrus.client.ClientManager;
import org.junit.*;
import static org.junit.Assert.*;

public class WebsocketPingTest {

    private static CountDownLatch messageLatch;
    private static final String SENT_MESSAGE = "Hello World";

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    @Test
    public void test1() {

        try {
            messageLatch = new CountDownLatch(1);

            final ClientEndpointConfig cec = ClientEndpointConfig.Builder.create().build();

            ClientManager client = ClientManager.createClient();
            client.connectToServer(new Endpoint() {

                @Override
                public void onOpen(Session session, EndpointConfig config) {
                    try {
                        session.addMessageHandler(new MessageHandler.Whole<String>() {

                            @Override
                            public void onMessage(String message) {
                                System.out.println("Received message: " + message);
                                messageLatch.countDown();
                            }
                        });
                        session.getBasicRemote().sendText(SENT_MESSAGE);
                        
                    } catch (IOException e) {
                        
                        assertTrue(e.getMessage(), false);
                        
                    }
                }
            }, cec, new URI("ws://localhost:8080/rest/echo"));
            
            messageLatch.await(100, TimeUnit.SECONDS);


        } catch (Exception e) {

            assertTrue(e.getMessage(), false);

        }
        
    }
    
}